import{_ as a,c as e,o as s,V as n}from"./chunks/framework.6038b03e.js";const _=JSON.parse('{"title":"webpack","description":"","frontmatter":{"title":"webpack"},"headers":[],"relativePath":"base/webpark笔记.md"}'),l={name:"base/webpark笔记.md"},p=n(`<h1 id="webpack" tabindex="-1">webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;webpack&quot;">​</a></h1><h2 id="_1-webpack是什么" tabindex="-1">1. webpack是什么？ <a class="header-anchor" href="#_1-webpack是什么" aria-label="Permalink to &quot;1. webpack是什么？&quot;">​</a></h2><p>webpack 是一种前端资源构建工具，一个静态模块打包器(module bundler)。 在 webpack 看来, 前端的所有资源文件(js/json/css/img/less/…)都会作为模块处理。它将根据模块的依赖关系进行静态分析，打包生成对应的静态资源(bundle)。</p><h2 id="_2-webpack五大核心概念" tabindex="-1">2. webpack五大核心概念 <a class="header-anchor" href="#_2-webpack五大核心概念" aria-label="Permalink to &quot;2. webpack五大核心概念&quot;">​</a></h2><ul><li>Entry 入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。</li><li>Output 输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</li><li>Loader Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解JavaScript)</li><li>Plugins 插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量等。</li><li>Mode 模式(Mode)指示 webpack 使用相应模式的配置。（development / production）</li></ul><h2 id="_3-webpack初体验" tabindex="-1">3. webpack初体验 <a class="header-anchor" href="#_3-webpack初体验" aria-label="Permalink to &quot;3. webpack初体验&quot;">​</a></h2><h3 id="_3-1初始化配置" tabindex="-1">3.1初始化配置 <a class="header-anchor" href="#_3-1初始化配置" aria-label="Permalink to &quot;3.1初始化配置&quot;">​</a></h3><ol><li>初始化 package.json 输入指令:npm init 会生成一个packcage.json文件，可以查看下载依赖的版本号</li><li>下载并安装 webpack 输入指令: （这里我使用的版本：webpack@4.41.6 webpack-cli@3.3.11） npm install webpack webpack-cli -g (全局) npm install webpack webpack-cli -D (下载的包都是开发时依赖)</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// npx是npm的一个伴生命令，在npm5.2以上已经内置，可以直接使用，其它版本需要安装使用。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// npx是运行本地的webpack</span></span>
<span class="line"><span style="color:#A6ACCD;">npx webpack</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 实现编译时的自动监测文件变化的功能（并执行文件打包）</span></span>
<span class="line"><span style="color:#A6ACCD;">npx webpack </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">watch</span></span></code></pre></div>`,9),c=[p];function t(i,o,r,b,k,d){return s(),e("div",null,c)}const h=a(l,[["render",t]]);export{_ as __pageData,h as default};
