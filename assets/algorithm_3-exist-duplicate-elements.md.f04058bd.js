import{_ as s,c as a,o as n,V as l}from"./chunks/framework.8a4a63e9.js";const C=JSON.parse('{"title":"存在重复元素","description":"","frontmatter":{"title":"存在重复元素"},"headers":[],"relativePath":"algorithm/3-exist-duplicate-elements.md"}'),o={name:"algorithm/3-exist-duplicate-elements.md"},e=l(`<h1 id="存在重复元素" tabindex="-1">存在重复元素 <a class="header-anchor" href="#存在重复元素" aria-label="Permalink to &quot;存在重复元素&quot;">​</a></h1><blockquote><p>给你一个整数数组nums。如果任一值在数组中出现至少两次，返回<code>true</code>;如果数组中每个元素互不相同 ，返回<code>false</code></p></blockquote><p>示例 1：</p><p>输入：nums = [1,2,3,1] 输出：true 示例 2：</p><p>输入：nums = [1,2,3,4] 输出：false 示例 3：</p><p>输入：nums = [1,1,1,3,3,4,3,2,4,2] 输出：true</p><h2 id="方法一" tabindex="-1">方法一 <a class="header-anchor" href="#方法一" aria-label="Permalink to &quot;方法一&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> containsDuplicate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">nums</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 对数组去重</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 去重后的数组跟传进来的数组长度进行对比，如果res长度不等于nums长度，则说明有重复元素，反之</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,8),p=[e];function t(c,r,y,F,i,D){return n(),a("div",null,p)}const u=s(o,[["render",t]]);export{C as __pageData,u as default};
