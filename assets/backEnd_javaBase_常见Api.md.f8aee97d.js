import{_ as s,o as a,c as t,V as n}from"./chunks/framework.6038b03e.js";const l="/vitepress/assets/system.64cc0ef6.png",D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/javaBase/常见Api.md","lastUpdated":null}'),p={name:"backEnd/javaBase/常见Api.md"},e=n(`<h2 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-label="Permalink to &quot;Math&quot;">​</a></h2><ol><li><p>Math：帮助我们进行数学计算的工具类</p></li><li><p>里面的方法是静态的。</p></li><li><p>常见方法如下：</p></li></ol><table><thead><tr><th>abs</th><th>获取绝对值</th></tr></thead><tbody><tr><td>absExact</td><td>获取绝对值</td></tr><tr><td>ceil</td><td>向上取整</td></tr><tr><td>floor</td><td>向下取整</td></tr><tr><td>round</td><td>四舍五入</td></tr><tr><td>max</td><td>获取最大值</td></tr><tr><td>min</td><td>获取最小值</td></tr><tr><td>pow(a, b)</td><td>获取a的b次幂</td></tr><tr><td>sqrt</td><td>开平方根</td></tr><tr><td>cbrt</td><td>开立方根</td></tr><tr><td>random</td><td>获取[0.0, 1.0)之间的随机数</td></tr></tbody></table><h2 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-label="Permalink to &quot;System&quot;">​</a></h2><p><strong>System也是一个工具类，提供了一些与系统相关的方法</strong></p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public static void exit(int status)</td><td>终止当前运行的Java虚拟机</td></tr><tr><td>public static long currentTimeMillis()</td><td>返回当前系统的时间毫秒值形式</td></tr><tr><td>public static void arraycopy(数据源数组, 起始索引, 目的地数组, 起始索引, 拷贝个数)</td><td>数组拷贝</td></tr></tbody></table><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">arraycopy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">数据源数组</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 起始索引</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 目的地数组</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 起始索引</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 拷贝个数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 把arr1数组中的数据拷贝到arr2中</span></span>
<span class="line"><span style="color:#A6ACCD;">参数一：数据源，要拷贝的数据从哪个数组而来</span></span>
<span class="line"><span style="color:#A6ACCD;">参数二：从数据源数组中的第几个索引开始拷贝</span></span>
<span class="line"><span style="color:#A6ACCD;">参数三：目的地，我要把数据拷贝到哪个数组中</span></span>
<span class="line"><span style="color:#A6ACCD;">参数四：目的地数组的索引</span></span>
<span class="line"><span style="color:#A6ACCD;">参数五：拷贝的个数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 细节</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> 如果数据源数组和目的地数组都是基本数据类型，那么两者的类型必须保持一致，否则会报错</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> 在拷贝的时候需要考虑数组的长度，如果超出范围也会报错</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">3.</span><span style="color:#A6ACCD;"> 如果数据源数组和目的地数组都是引用数据类型，那么子类类型可以赋值给父类类型</span></span></code></pre></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p><img src="`+l+'" alt=""></p>',9),o=[e];function r(c,d,i,y,C,A){return a(),t("div",null,o)}const _=s(p,[["render",r]]);export{D as __pageData,_ as default};
